<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="byteartRetailConfigSection" type="ByteartRetail.Infrastructure.Config.ByteartRetailConfigSection, ByteartRetail.Infrastructure" />
  </configSections>
  <!-- BEGIN: Entity Framework-->
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="Data Source=(LocalDb)\v11.0; Initial Catalog=ByteartRetail; Integrated Security=True; Connect Timeout=120; MultipleActiveResultSets=True; AttachDBFilename=|DataDirectory|\ByteartRetail.mdf" />
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
  <!-- END: Entity Framework-->
  <!--BEGIN: Unity-->
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <container>
      <extension type="Interception" />
      <!--Cache Provider-->
      <register type="ByteartRetail.Infrastructure.Caching.ICacheProvider, ByteartRetail.Infrastructure" mapTo="ByteartRetail.Infrastructure.Caching.EntLibCacheProvider, ByteartRetail.Infrastructure.Caching" />
      <!--Repository Context & Repositories-->
      <register type="ByteartRetail.Domain.Repositories.IRepositoryContext, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.EntityFramework.EntityFrameworkRepositoryContext, ByteartRetail.Domain.Repositories">
        <lifetime type="ByteartRetail.Infrastructure.WcfPerRequestLifetimeManager, ByteartRetail.Infrastructure" />
      </register>
      <register type="ByteartRetail.Domain.Repositories.IUserRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.UserRepository, ByteartRetail.Domain.Repositories" />
      <register type="ByteartRetail.Domain.Repositories.ISalesOrderRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.SalesOrderRepository, ByteartRetail.Domain.Repositories" />
      <register type="ByteartRetail.Domain.Repositories.IProductRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.ProductRepository, ByteartRetail.Domain.Repositories" />
      <register type="ByteartRetail.Domain.Repositories.ICategoryRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.CategoryRepository, ByteartRetail.Domain.Repositories" />
      <register type="ByteartRetail.Domain.Repositories.ICategorizationRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.CategorizationRepository, ByteartRetail.Domain.Repositories" />
      <register type="ByteartRetail.Domain.Repositories.IShoppingCartRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.ShoppingCartRepository, ByteartRetail.Domain.Repositories" />
      <register type="ByteartRetail.Domain.Repositories.IShoppingCartItemRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.ShoppingCartItemRepository, ByteartRetail.Domain.Repositories" />
      <register type="ByteartRetail.Domain.Repositories.IRoleRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.RoleRepository, ByteartRetail.Domain.Repositories" />
      <register type="ByteartRetail.Domain.Repositories.IUserRoleRepository, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Repositories.UserRoleRepository, ByteartRetail.Domain.Repositories" />
      <!--Domain Services-->
      <register type="ByteartRetail.Domain.Services.IDomainService, ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Services.DomainService, ByteartRetail.Domain" />
      <!--Application Service Implementations-->
      <register type="ByteartRetail.ServiceContracts.IUserService, ByteartRetail.ServiceContracts" mapTo="ByteartRetail.Application.Implementation.UserServiceImpl, ByteartRetail.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="ByteartRetail.Infrastructure.InterceptionBehaviors.CachingBehavior, ByteartRetail.Infrastructure" />
        <interceptionBehavior type="ByteartRetail.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, ByteartRetail.Infrastructure" />
      </register>
      <register type="ByteartRetail.ServiceContracts.IProductService, ByteartRetail.ServiceContracts" mapTo="ByteartRetail.Application.Implementation.ProductServiceImpl, ByteartRetail.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="ByteartRetail.Infrastructure.InterceptionBehaviors.CachingBehavior, ByteartRetail.Infrastructure" />
        <interceptionBehavior type="ByteartRetail.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, ByteartRetail.Infrastructure" />
      </register>
      <register type="ByteartRetail.ServiceContracts.IOrderService, ByteartRetail.ServiceContracts" mapTo="ByteartRetail.Application.Implementation.OrderServiceImpl, ByteartRetail.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="ByteartRetail.Infrastructure.InterceptionBehaviors.CachingBehavior, ByteartRetail.Infrastructure" />
        <interceptionBehavior type="ByteartRetail.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, ByteartRetail.Infrastructure" />
      </register>
      <register type="ByteartRetail.ServiceContracts.IPostbackService, ByteartRetail.ServiceContracts" mapTo="ByteartRetail.Application.Implementation.PostbackServiceImpl, ByteartRetail.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="ByteartRetail.Infrastructure.InterceptionBehaviors.CachingBehavior, ByteartRetail.Infrastructure" />
        <interceptionBehavior type="ByteartRetail.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, ByteartRetail.Infrastructure" />
      </register>
      <!--Domain Event Handlers-->
      <register type="ByteartRetail.Domain.Events.IDomainEventHandler`1[[ByteartRetail.Domain.Events.DispatchOrderEvent, ByteartRetail.Domain]], ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Events.Handlers.DispatchOrderDomainEventHandler, ByteartRetail.Domain" name="DispatchOrderDomainEventHandler" />
      <register type="ByteartRetail.Domain.Events.IDomainEventHandler`1[[ByteartRetail.Domain.Events.ConfirmOrderEvent, ByteartRetail.Domain]], ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Events.Handlers.ConfirmOrderDomainEventHandler, ByteartRetail.Domain" name="ConfirmOrderDomainEventHandler" />
      <register type="ByteartRetail.Domain.Events.IDomainEventHandler`1[[ByteartRetail.Domain.Events.GetUserOrdersEvent, ByteartRetail.Domain]], ByteartRetail.Domain" mapTo="ByteartRetail.Domain.Events.Handlers.GetUserOrdersDomainEventHandler, ByteartRetail.Domain" name="GetUserOrdersDomainEventHandler" />
      <!--Event Handlers-->
      <register name="OrderDispatchedSendEmailHandler" type="ByteartRetail.Events.IEventHandler`1[[ByteartRetail.Events.OrderDispatchedEvent, ByteartRetail.Events]], ByteartRetail.Events" mapTo="ByteartRetail.Events.Handlers.SendEmailHandler, ByteartRetail.Events.Handlers" />
      <register name="OrderConfirmedSendEmailHandler" type="ByteartRetail.Events.IEventHandler`1[[ByteartRetail.Events.OrderConfirmedEvent, ByteartRetail.Events]], ByteartRetail.Events" mapTo="ByteartRetail.Events.Handlers.SendEmailHandler, ByteartRetail.Events.Handlers" />
      <!--Event Aggregator-->
        <register type="ByteartRetail.Events.IEventAggregator, ByteartRetail.Events" mapTo="ByteartRetail.Events.EventAggregator, ByteartRetail.Events">
          <constructor>
            <param name="handlers">
              <array>
                <dependency name="OrderDispatchedSendEmailHandler" type="ByteartRetail.Events.IEventHandler`1[[ByteartRetail.Events.OrderDispatchedEvent, ByteartRetail.Events]], ByteartRetail.Events" />
              <dependency name="OrderConfirmedSendEmailHandler" type="ByteartRetail.Events.IEventHandler`1[[ByteartRetail.Events.OrderConfirmedEvent, ByteartRetail.Events]], ByteartRetail.Events" />
              </array>
            </param>
          </constructor>
        </register>
      <!--Event Bus-->
      <register type="ByteartRetail.Events.Bus.IEventBus, ByteartRetail.Events"
                mapTo="ByteartRetail.Events.Bus.EventBus, ByteartRetail.Events"/>
    </container>
  </unity>
  <!--END: Unity-->
  <!--BEGIN: log4net-->
  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Logs\balog.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="100KB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%newline%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <logger name="ByteartRetail.Logger">
      <level value="ERROR" />
      <level value="INFO" />
      <appender-ref ref="RollingFileAppender" />
    </logger>
  </log4net>
  <!--END: log4net-->
  <!--BEGIN: Caching-->
  <cachingConfiguration defaultCacheManager="ByteartRetailCacheManager">
        <cacheManagers>
            <add name="ByteartRetailCacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="600" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
        </cacheManagers>
        <backingStores>
            <add type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="NullBackingStore" />
        </backingStores>
    </cachingConfiguration>
  <!--END: Caching-->
  <!--BEGIN: ByteartRetail Configuration-->
  <byteartRetailConfigSection xmlns="urn:ByteartRetail.Infrastructure.Config">
    <emailClient host="smtp.163.com" port="25" userName="byteartretail" password="byteartretail123" enableSsl="false" sender="byteartretail@163.com" />
  </byteartRetailConfigSection>
  <!--END: ByteartRetail Configuration-->
  <!--
    For a description of web.config changes for .NET 4.5 see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
    <!--<identity impersonate="true"/>-->
    <pages controlRenderingCompatibilityVersion="4.0" />
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Interception" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Configuration" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.505.0" newVersion="2.1.505.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.EnterpriseLibrary.Common" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.414.0" newVersion="5.0.414.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
